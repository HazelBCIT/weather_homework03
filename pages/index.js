import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import { useState } from 'react'
import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [location, setLocation] = useState('');
  const [data,setData] = useState({});
  const [weather, setWeaher] = useState();
  const [errorMessage, setErrorMessage] = useState('');

  var apiKey = "4228ae0adc973a748d5fafcf75fbc73f"
  var lang = "en";
  var units = "metric";
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=${units}&appid=${apiKey}&lang=${lang}`

  const searchLocation = (event) => {
    if(event.key === "Enter") {
      axios.get(url)
      .then((response)=>{
        console.clear();
        setData(response.data)
        console.log(response.data);
        setWeaher(response.data.weather);
        setErrorMessage("")
      }).catch(err => {
        console.log(err);
        setErrorMessage("Please enter another location.")
        setData({})
        setWeaher
      })
      setLocation('')
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.logo}>
            the
            <br />
            weather
            <br />
            channel 
          </div>
        <div className={styles.search}>
        <input 
            value={location}
            onChange={event => setLocation(event.target.value)}
            placeholder="Enter Location"
            onKeyDown={searchLocation}
            type="text"
          />
        </div>

        {errorMessage}
        <div className={styles.city}>
          {data.name}
        </div>

{
          weather && weather.map((w, index) => {
            return (
              <div key={index}>
                <div className={styles.row}>
                  <div className={styles.temp}>{data.main.temp.toFixed()}
                  </div>
                  <h2>°C</h2>
                  <div className={styles.feels_box}>
                    <div className={styles.feels}>
                      <p className={styles.bold}>FEELS</p>
                      <p className={styles.bold}>LIKE</p>
                    </div> 
                      <h3>{data.main.feels_like.toFixed()}</h3>
                      <h4>°C</h4>
                  </div>
                </div>
                
                <div className={styles.col}>
                  <div>{w.main}</div>
                  <p>{w.description}</p>

                  <div className={styles.bottom}>
                    <div className={styles.col2}>
                      <p>MINIMUM<br/>TEMPERATURE</p>
                      <div>{data.main.temp_min.toFixed()}°C</div>
                    </div>
                    <div className={styles.col2}>
                      <p>MAXIMUM<br/>TEMPERATURE</p>
                      <div>{data.main.temp_max.toFixed()}°C</div>
                    </div>
                    <div className={styles.col2}>
                      <p>WIND</p>
                      <div>{data.wind.speed.toFixed()}m/s</div>
                    </div>
                  </div>
                  
                  
                </div>
              </div>
            )
          })
        }

        <div className={styles.copyright}>©Hazel Wang</div>
      </main>
    </>
  )
}
